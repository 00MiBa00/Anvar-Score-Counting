name: Build project IOS

on: [workflow_dispatch]

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        unity-version:
          - 2022.3.33f1
        os:
          - ubuntu-latest
        targetPlatform:
          - iOS
    steps:
      ###########################
      #        Checkout         #
      ###########################
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      ###########################
      #         Cache           #
      ###########################
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      ###########################
      #          Disk           #
      ###########################
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      
      ###########################
      #          Build          #
      ###########################
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      
      ###########################
      #          Upload         #
      ###########################
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  releaseToAppStore:
    name: Release to the App Store
    runs-on: macos-latest
    needs: buildForAllSupportedPlatforms
    strategy:
      matrix:
        targetPlatform:
          - iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
    steps:
      ###########################
      #        Checkout         #
      ###########################
      - name: Checkout Repository
        uses: actions/checkout@v4

      ###########################
      #  Download iOS Artifact  #
      ###########################
      - name: Download iOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}      ###################
      #  xcode-version  #
      ###################
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.4.0'      ###########################################
      #  Fix File Permissions and Run fastlane  #
      ###########################################
      - name: Fix File Permissions and Run fastlane
        env:
          FASTLANE_DISABLE_CONNECT_API: true
          APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
          APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}

          IOS_BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
          IOS_BUNDLE_ID: com.jrxkw.ptmlyqsd
          APP_VERSION: "11.0"
          PROJECT_NAME: "BSon - Score Counting"
        run: |
          echo "Checking environment variables..."
          if [ -z "$APPLE_TEAM_ID" ]; then echo "❌ APPLE_TEAM_ID is missing"; exit 1; fi
          if [ -z "$IOS_BUNDLE_ID" ]; then echo "❌ IOS_BUNDLE_ID is missing"; exit 1; fi
          if [ -z "$APPSTORE_P8" ]; then echo "❌ APPSTORE_P8 is missing"; exit 1; fi
          
          echo "Setting up SSH for match..."
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          
          echo "Setting file permissions..."
          find $IOS_BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
          
          echo "Installing bundle dependencies..."
          bundle install
          
          echo "Running fastlane beta lane..."
          bundle exec fastlane ios beta

      ####################################
      #  Cleanup to avoid storage limit  #
      ####################################
      #- name: Cleanup to avoid storage limit
        #if: always()
        #uses: geekyeggo/delete-artifact@v2
        #with:
          #name: build-iOS
